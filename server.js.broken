const express = require('express');
const path = require('path');
const app = express();
const PORT = process.env.PORT || 3000;

console.log('🚀 TeleMed Server Starting...');

// Middleware para logs
app.use((req, res, next) => {
    console.log(`📍 ${req.method} ${req.path}`);
    next();
});

// Servir arquivos estáticos
app.use(express.static('public'));
app.use(express.static('.'));

// Rota principal
app.get('/', (req, res) => {
    console.log('🎯 Servindo sistema integrado');
    res.sendFile(path.join(__dirname, 'public', 'sistema-integrado.html'));
});

// Rota para sistema completo híbrido
app.get('/complete', (req, res) => {
    console.log('🎯 Servindo sistema híbrido completo');
    res.sendFile(path.join(__dirname, 'public', 'telemed-complete.html'));
});

// Rotas específicas
app.get('/demo', (req, res) => {
    console.log('🎨 Servindo demo-ativo');
    res.sendFile(path.join(__dirname, 'public', 'demo-ativo', 'index.html'));
});

app.get('/consulta', (req, res) => {
    console.log('⚡ Servindo sistema de consulta');
    res.sendFile(path.join(__dirname, 'public', 'react-app', 'index.html'));
});

app.get('/sistema', (req, res) => {
    console.log('🎯 Servindo sistema integrado (rota alternativa)');
    res.sendFile(path.join(__dirname, 'public', 'sistema-integrado.html'));
});

// Rota de saúde
app.get('/health', (req, res) => {
    res.json({ 
        status: 'OK', 
        server: 'TeleMed Híbrido',
        timestamp: new Date().toISOString()
    });
});

// Iniciar servidor
app.listen(PORT, '0.0.0.0', () => {
    console.log(`✅ TeleMed Server ONLINE na porta ${PORT}`);
    console.log(`🌐 URLs disponíveis:`);
    console.log(`   🏠 Home: /`);
    console.log(`   🎯 Sistema Completo: /complete`);
    console.log(`   🎨 Demo: /demo`);
    console.log(`   ⚡ Consulta: /consulta`);
    console.log(`   💚 Health: /health`);
});
