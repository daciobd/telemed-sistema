vamos ‚Äúplugar‚Äù o Dr. AI no /enhanced que voc√™ j√° tem, sem trocar o layout atual. Abaixo vai um bloco vanilla HTML/CSS/JS que cria um painel lateral (off-canvas) de IA, conecta no endpoint /api/dr-ai e √© acionado pelo bot√£o do c√©rebro (ou cria um bot√£o flutuante se ele n√£o existir).

Cole tudo isso imediatamente antes de </body> na sua p√°gina /enhanced:

<!-- === Dr.AI: Painel lateral ================================================== -->
<style>
  :root{
    --ai-bg:#fff; --ai-border:#e5e7eb; --ai-muted:#6b7280; --ai-primary:#2563eb;
    --ai-shadow:0 10px 30px rgba(0,0,0,.12);
  }
  #drAiPanel{
    position:fixed; inset:0 0 0 auto; width:420px; max-width:92vw; background:var(--ai-bg);
    box-shadow:var(--ai-shadow); border-left:1px solid var(--ai-border);
    transform:translateX(100%); transition:transform .25s ease; z-index:9999;
    display:flex; flex-direction:column; font-family:Inter,system-ui,Arial,sans-serif;
  }
  #drAiPanel.open{ transform:translateX(0) }
  #drAiHeader{ display:flex; align-items:center; justify-content:space-between; gap:8px;
    padding:12px 14px; border-bottom:1px solid var(--ai-border); background:#fafafa}
  #drAiHeader h3{ margin:0; font-size:16px }
  #drAiDisclaimer{ font-size:12px; color:var(--ai-muted); padding:8px 14px; border-bottom:1px solid var(--ai-border)}
  #drAiMessages{ flex:1; overflow:auto; padding:14px; display:flex; flex-direction:column; gap:12px}
  .ai-bubble{ padding:10px 12px; border:1px solid var(--ai-border); border-radius:12px; background:#fff }
  .ai-bubble.you{ align-self:flex-end; background:#eef2ff; border-color:#c7d2fe }
  .ai-bubble.assistant{ align-self:flex-start }
  #drAiQuick{ display:flex; gap:8px; flex-wrap:wrap; padding:8px 14px }
  .ai-chip{ font-size:12px; padding:6px 10px; border:1px solid #c7d2fe; border-radius:999px; background:#eef2ff; cursor:pointer }
  #drAiComposer{ display:flex; gap:8px; padding:12px 14px; border-top:1px solid var(--ai-border); background:#fafafa}
  #drAiInput{ flex:1; resize:none; padding:10px 12px; border-radius:10px; border:1px solid var(--ai-border); min-height:44px }
  #drAiSend{ background:var(--ai-primary); border:none; color:#fff; border-radius:10px; padding:0 14px; font-weight:600; cursor:pointer }
  #drAiClose{ background:transparent; border:1px solid var(--ai-border); padding:6px 10px; border-radius:8px; cursor:pointer }
  /* Bot√£o flutuante de fallback (se n√£o encontrarmos o bot√£o do c√©rebro) */
  #drAiFab{ position:fixed; right:18px; bottom:18px; z-index:9998; display:none }
  #drAiFab button{ width:52px; height:52px; border-radius:999px; border:none; background:#1f2937; color:#fff; box-shadow:var(--ai-shadow); cursor:pointer }
</style>

<div id="drAiPanel" aria-hidden="true">
  <div id="drAiHeader">
    <h3>üß† Dr. AI ‚Ä¢ suporte cl√≠nico (beta)</h3>
    <div style="display:flex; gap:8px;">
      <button id="drAiClear" title="Limpar conversa">Limpar</button>
      <button id="drAiClose" title="Fechar">Fechar</button>
    </div>
  </div>
  <div id="drAiDisclaimer">
    As respostas s√£o sugest√µes educacionais; a decis√£o cl√≠nica √© exclusiva do m√©dico respons√°vel.
  </div>
  <div id="drAiQuick">
    <span class="ai-chip" data-q="Explique em linguagem simples o diagn√≥stico prov√°vel e sinais de alarme.">Explicar diagn√≥stico</span>
    <span class="ai-chip" data-q="Sugira condutas baseadas em diretrizes para este caso (doses adultas e pedi√°tricas quando aplic√°vel).">Sugerir conduta</span>
    <span class="ai-chip" data-q="Monte um resumo conciso para o prontu√°rio com HDA, hip√≥tese, CID10, conduta e orienta√ß√µes.">Resumo p/ prontu√°rio</span>
    <span class="ai-chip" data-q="Quais exames iniciais s√£o mais √∫teis e quando evit√°-los? Justifique.">Exames √∫teis</span>
  </div>
  <div id="drAiMessages" role="log" aria-live="polite"></div>
  <div id="drAiComposer">
    <textarea id="drAiInput" placeholder="Pergunte algo ao Dr. AI‚Ä¶ (ex.: conduta para cefaleia cr√¥nica, quando solicitar imagem?)"></textarea>
    <button id="drAiSend">Enviar</button>
  </div>
</div>

<!-- Fallback: FAB se n√£o houver bot√£o do c√©rebro na barra -->
<div id="drAiFab"><button title="Abrir Dr. AI">üß†</button></div>

<script>
(() => {
  const panel   = document.getElementById('drAiPanel');
  const messagesEl = document.getElementById('drAiMessages');
  const input   = document.getElementById('drAiInput');
  const sendBtn = document.getElementById('drAiSend');
  const closeBtn= document.getElementById('drAiClose');
  const clearBtn= document.getElementById('drAiClear');
  const fabWrap = document.getElementById('drAiFab');

  // Tenta ligar no bot√£o do "c√©rebro" existente
  const brainBtn =
    document.querySelector('[data-action="ai"], [data-ai], .btn-ai, .icon-ai, button.ai, .toolbar .brain') || null;
  if (brainBtn) {
    brainBtn.addEventListener('click', togglePanel);
  } else {
    // Sen√£o, mostra o FAB
    fabWrap.style.display = 'block';
    fabWrap.querySelector('button').addEventListener('click', togglePanel);
  }

  closeBtn.addEventListener('click', togglePanel);
  clearBtn.addEventListener('click', () => {
    messages.length = 0;
    messagesEl.innerHTML = '';
    localStorage.removeItem('drAiThread');
    appendAssistant('Conversa limpa. Em que posso ajudar?');
  });

  // Chips de atalho
  document.querySelectorAll('#drAiQuick .ai-chip').forEach(chip => {
    chip.addEventListener('click', () => {
      input.value = chip.getAttribute('data-q');
      input.focus();
    });
  });

  // Estado da conversa
  const messages = JSON.parse(localStorage.getItem('drAiThread') || '[]');
  if (messages.length === 0) {
    appendAssistant('Ol√°! Posso auxiliar com diagn√≥stico diferencial, conduta, exames √∫teis e resumo para prontu√°rio. Lembre-se: isso √© apoio √† decis√£o ‚Äî a decis√£o final √© sua. ‚úÖ');
  } else {
    // Restaura o log visual
    for (const m of messages) appendBubble(m.role, m.content);
  }

  sendBtn.addEventListener('click', onSend);
  input.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); onSend(); }
  });

  function togglePanel(){
    const open = panel.classList.toggle('open');
    panel.setAttribute('aria-hidden', open ? 'false' : 'true');
    if (open) setTimeout(() => input.focus(), 50);
  }

  function onSend(){
    const text = (input.value || '').trim();
    if (!text) return;
    appendUser(text);
    input.value = '';
    askAI(text);
  }

  function appendBubble(role, content){
    const div = document.createElement('div');
    div.className = 'ai-bubble ' + (role === 'user' ? 'you' : 'assistant');
    div.textContent = content;
    messagesEl.appendChild(div);
    messagesEl.scrollTop = messagesEl.scrollHeight;
  }
  function appendUser(content){
    messages.push({ role:'user', content });
    persist();
    appendBubble('user', content);
  }
  function appendAssistant(content){
    messages.push({ role:'assistant', content });
    persist();
    appendBubble('assistant', content);
  }
  function persist(){
    localStorage.setItem('drAiThread', JSON.stringify(messages).slice(0, 200000)); // prote√ß√£o
  }

  async function askAI(newQuestion){
    // Contexto opcional capturado da tela (se existir)
    const patient = (document.querySelector('[name="patient"], #patientName')?.value || 
                     document.querySelector('.patient-name')?.textContent || '').trim();
    const hda     = document.querySelector('[name="hda"]')?.value || '';
    const dx      = document.querySelector('[name="diagnosis"], #diagnosisInput')?.value || '';
    const conduta = document.querySelector('[name="plan"]')?.value || '';

    const payload = {
      messages,
      context: { patient, hda, diagnosis: dx, plan: conduta }
    };

    // Placeholder ‚Äúdigitando‚Ä¶‚Äù
    const typing = document.createElement('div');
    typing.className = 'ai-bubble assistant';
    typing.textContent = 'Dr. AI est√° analisando‚Ä¶';
    messagesEl.appendChild(typing);
    messagesEl.scrollTop = messagesEl.scrollHeight;

    try{
      const r = await fetch('/api/dr-ai', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify(payload)
      });
      const data = await r.json();
      typing.remove();

      const text = (data && (data.text || data.answer || data.message)) ||
        'N√£o consegui gerar uma resposta agora. Tente reformular a pergunta.';
      appendAssistant(text);
    }catch(err){
      typing.remove();
      appendAssistant('Falha ao contactar a IA. Verifique a rede/servidor e tente novamente.');
      console.error(err);
    }
  }
})();
</script>

Back-end (seu Express)

Se voc√™ ainda n√£o criou o endpoint, adicione ao server:

// server/routes/dr-ai.js (CommonJS)
const express = require('express');
const router = express.Router();

// IMPORTANTE: troque por sua integra√ß√£o real de IA.
// Abaixo, um stub que s√≥ ecoa e adiciona ressalva.
router.post('/', async (req, res) => {
  try {
    const { messages = [], context = {} } = req.body || {};
    const last = messages.filter(m => m.role === 'user').slice(-1)[0]?.content || '';

    const disclaimer = '‚ö†Ô∏è Aviso: resposta educacional para apoio √† decis√£o. Avalie diretrizes locais, quadro cl√≠nico e contraindica√ß√µes. A decis√£o final √© do m√©dico.';
    const synthesized =
      `Pergunta: ${last}\n` +
      (context.patient ? `Paciente: ${context.patient}\n` : '') +
      (context.hda ? `HDA: ${context.hda}\n` : '') +
      (context.diagnosis ? `Hip√≥tese: ${context.diagnosis}\n` : '') +
      `\nSugest√£o geral (exemplo):\n‚Ä¢ Considerar diagn√≥stico diferencial e sinais de alarme.\n‚Ä¢ Solicitar exames apenas se mudarem conduta.\n‚Ä¢ Reavaliar risco/benef√≠cio e fatores individuais.\n\n${disclaimer}`;

    res.json({ ok:true, text:synthesized });
  } catch (e) {
    console.error(e);
    res.status(500).json({ ok:false, error:'DR_AI_FAILED' });
  }
});

module.exports = router;


E registre no app:

// server/index.js (ou index.ts equivalente)
const drAi = require('./routes/dr-ai');
app.use('/api/dr-ai', drAi);


Depois disso, recarregue /enhanced.
‚Äì Se o bot√£o do c√©rebro j√° existir, ele abrir√° o painel.
‚Äì Se n√£o existir, aparecer√° um FAB üß† no canto inferior-direito.

Observa√ß√µes r√°pidas

O painel guarda a conversa em localStorage (drAiThread) e volta de onde parou.

H√° chips de atalho (Explicar diagn√≥stico, Sugerir conduta, etc).

O texto de aviso (disclaimer) aparece sempre e a √∫ltima linha das respostas refor√ßa a responsabilidade m√©dica.

Estilos s√£o neutros e n√£o atrapalham seu layout atual; pode ajustar cores no :root.