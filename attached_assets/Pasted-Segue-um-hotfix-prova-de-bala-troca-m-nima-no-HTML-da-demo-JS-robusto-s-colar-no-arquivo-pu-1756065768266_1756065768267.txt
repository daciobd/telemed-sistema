Segue um hotfix à prova de bala: troca mínima no HTML da demo + JS robusto. É só colar no arquivo public/dr-ai.html substituindo o trecho da DEMO (form + script).

1) Substituir o FORM da demo (HTML)

Troque apenas o bloco do formulário (dentro de #demo-pacientes) por este:

<!-- DEMONSTRAÇÃO PARA PACIENTES -->
<section class="section" id="demo-pacientes" aria-labelledby="h-demo">
  <div class="prose center">
    <h2 id="h-demo">Demonstração para Pacientes</h2>
    <p class="muted">Simule uma triagem: preencha abaixo e veja o resultado</p>
  </div>

  <div class="demo mt-3">
    <form id="demoForm">
      <div class="form-row">
        <div class="field" style="grid-column:1/-1">
          <label for="sx">O que você está sentindo?</label>
          <textarea id="sx" rows="3" placeholder="Ex.: dor no peito, falta de ar, febre, manchas na pele..."></textarea>
        </div>

        <div class="field">
          <label for="dur">Há quanto tempo?</label>
          <select id="dur">
            <option value="0-24h">0–24h</option>
            <option value="2-7d">2–7 dias</option>
            <option value="8-14d">8–14 dias</option>
            <option value="15d+">15 dias ou mais</option>
          </select>
        </div>

        <div class="field">
          <label for="sev">Intensidade</label>
          <!-- sem oninput inline -->
          <input id="sev" type="range" min="0" max="10" value="5" />
          <div><small>Valor: <strong id="sevOut">5</strong>/10</small></div>
        </div>
      </div>

      <details class="mt-3">
        <summary><strong>Algum destes sinais de alerta?</strong></summary>
        <div class="form-row mt-2">
          <label><input type="checkbox" class="rf" value="dor-peito"> Dor forte no peito</label>
          <label><input type="checkbox" class="rf" value="falta-ar"> Falta de ar intensa</label>
          <label><input type="checkbox" class="rf" value="desmaio"> Desmaio/confusão</label>
          <label><input type="checkbox" class="rf" value="sangramento"> Sangramento importante</label>
          <label><input type="checkbox" class="rf" value="febre-alta"> Febre alta persistente</label>
          <label><input type="checkbox" class="rf" value="ideacao"> Ideação suicida</label>
          <label><input type="checkbox" class="rf" value="rigidez-nuca"> Rigidez na nuca</label>
        </div>
      </details>

      <div class="mt-3">
        <!-- type=button evita submit da página -->
        <button type="button" id="run" class="btn btn-primary">Analisar</button>
        <button type="button" id="clear" class="btn">Limpar</button>
      </div>
    </form>

    <div id="resultado" class="result mt-3" aria-live="polite"></div>
    <p class="note mt-3">
      <strong>Atenção:</strong> esta é uma demonstração educacional e <u>não substitui</u> atendimento médico.
      Em caso de emergência, procure um serviço de urgência.
    </p>
  </div>
</section>


mudanças: tiramos onsubmit="return false", colocamos type="button" nos botões e removemos oninput do slider (vamos ligar por JS).

2) Substituir o SCRIPT da página (JS)

Troque o <script>…</script> do final da página por este completo:

<script>
(function(){
  // helpers
  const $  = (s, r=document) => r.querySelector(s);
  const $$ = (s, r=document) => [...r.querySelectorAll(s)];
  const norm = s => (s||'').toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g,'');

  // mapeamento simples de palavras-chave → especialidade
  const MAP = [
    { esp:'Cardiologia',  kw:['peito','palpitacao','taquicardia','falta de ar','pressao alta','dor no peito'] },
    { esp:'Dermatologia', kw:['pele','mancha','coceira','lesao','acne','dermatite','rash'] },
    { esp:'Psiquiatria',  kw:['ansiedade','panico','depressao','humor','insonia','ideacao','suicida'] },
    { esp:'Ortopedia',    kw:['lombar','queda','torcao','osso','coluna','entorse','fratura'] },
    { esp:'Gastro',       kw:['abdominal','nausea','vomito','diarreia','azia','refluxo'] },
    { esp:'Clínica Geral',kw:['gripe','febre','tosse','dor garganta','mal estar','cansaco'] }
  ];

  function sugerirEspecialidade(texto){
    const t = norm(texto);
    for (const row of MAP){ if (row.kw.some(k => t.includes(k))) return row.esp; }
    return 'Clínica Geral';
  }

  function classificarRisco(sev, dur, redflags){
    if (redflags.length) return {nivel:'Alto', class:'alto', msg:'Sinal de alerta informado'};
    if (sev>=8)          return {nivel:'Alto', class:'alto', msg:'Intensidade muito alta'};
    if (sev>=5 && (dur==='15d+' || dur==='8-14d'))
                         return {nivel:'Moderado', class:'moderado', msg:'Sintomas persistentes'};
    return {nivel:'Baixo', class:'baixo', msg:'Sem sinais importantes detectados'};
  }

  function renderResultado({esp, risco}){
    const qsEsp = encodeURIComponent(esp);
    const hrefConsulta = `/consulta?esp=${qsEsp}`;
    const hrefAgenda   = `/agenda?esp=${qsEsp}`;

    return `
      <div class="card">
        <div class="card-body">
          <h3>Resultado da Demonstração</h3>
          <p><strong>Especialidade sugerida:</strong> ${esp}</p>
          <p><strong>Classificação do risco:</strong> <span class="risk ${risco.class}">${risco.nivel}</span> <span class="muted">— ${risco.msg}</span></p>
          <div class="next mt-2">
            ${(
              risco.class==='alto' ? [
                'Procure atendimento de urgência se os sintomas forem intensos ou súbitos.',
                'Se estiver em segurança, siga para uma avaliação médica.'
              ] :
              risco.class==='moderado' ? [
                `Agende uma consulta com ${esp} nas próximas 24–72h.`
              ] : [
                `Você pode iniciar por ${esp}.`
              ]
            ).map(s=>`<div>• ${s}</div>`).join('')}
            <div>• Leve a descrição dos sintomas para agilizar sua consulta.</div>
          </div>
          <div class="mt-3">
            <a class="btn btn-primary" href="${hrefConsulta}">Iniciar Triagem Agora</a>
            <a class="btn" href="${hrefAgenda}">Agendar ${esp}</a>
          </div>
        </div>
      </div>
    `;
  }

  function runDemo(){
    const sx   = $('#sx').value.trim();
    const dur  = $('#dur').value;
    const sev  = +$('#sev').value;
    const rfs  = $$('.rf:checked').map(c=>c.value);

    const esp   = sugerirEspecialidade(sx);
    const risco = classificarRisco(sev, dur, rfs);
    $('#resultado').innerHTML = renderResultado({esp, risco});
  }

  function resetDemo(){
    $('#sx').value = '';
    $('#dur').value = '0-24h';
    $('#sev').value = 5;
    $('#sevOut').textContent = '5';
    $$('.rf:checked').forEach(c=>c.checked=false);
    $('#resultado').innerHTML = '';
  }

  // liga eventos só quando DOM estiver pronto
  document.addEventListener('DOMContentLoaded', () => {
    // slider: atualiza valor sem inline oninput
    const sev = $('#sev'), sevOut = $('#sevOut');
    const updateSev = () => { if (sevOut) sevOut.textContent = sev.value; };
    sev.addEventListener('input', updateSev);
    updateSev();

    // botões
    $('#run').addEventListener('click', (e)=>{ e.preventDefault(); runDemo(); });
    $('#clear').addEventListener('click', (e)=>{ e.preventDefault(); resetDemo(); });

    // enter no textarea envia análise
    $('#demoForm').addEventListener('submit', (e)=>{ e.preventDefault(); runDemo(); });
  });
})();
</script>


Por que agora funciona:

Botões têm type="button" (não submetem o form).

Nada depende de id virar variável global (adeus oninput="sevOut...").

Eventos só são ligados após DOMContentLoaded.

submit do form é interceptado (Enter no campo também chama Analisar).