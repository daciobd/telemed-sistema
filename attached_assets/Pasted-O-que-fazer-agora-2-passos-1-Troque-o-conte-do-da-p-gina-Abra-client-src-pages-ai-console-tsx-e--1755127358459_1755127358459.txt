O que fazer agora (2 passos)
1) Troque o conteúdo da página

Abra client/src/pages/ai-console.tsx e substitua tudo por este código:

// client/src/pages/ai-console.tsx
import { useEffect, useState } from "react";

type Status = { ok: boolean } | null;

export default function AIConsolePage() {
  const [status, setStatus] = useState<Status>(null);
  const [question, setQuestion] = useState("");
  const [answer, setAnswer] = useState<string>("");
  const [pending, setPending] = useState(false);
  const [error, setError] = useState<string>("");

  // carrega status do agente quando a página abre
  useEffect(() => {
    fetch("/api/ai-agent/status", { credentials: "include" })
      .then(async r => {
        if (r.status === 403) throw new Error("IA desabilitada (AI_ENABLED=false) ou sem permissão.");
        if (r.status === 428) throw new Error("Consentimento necessário.");
        if (!r.ok) throw new Error(`Falha ao verificar status (${r.status}).`);
        return r.json();
      })
      .then(data => setStatus(data))
      .catch(e => setError(e.message));
  }, []);

  async function ask() {
    setPending(true);
    setError("");
    setAnswer("");
    try {
      const r = await fetch("/api/ai-agent/ask", {
        method: "POST",
        credentials: "include",
        headers: {
          "Content-Type": "application/json",
          "x-csrf": "1", // se você NÃO adicionou o middleware CSRF-lite, esse header é ignorado
        },
        body: JSON.stringify({
          // ⚠️ não envie PII aqui
          question: question.trim(),
        }),
      });

      if (r.status === 401) throw new Error("Faça login.");
      if (r.status === 403) throw new Error("IA desabilitada ou sem permissão.");
      if (r.status === 428) throw new Error("Consentimento necessário (autorize a IA no banner).");
      if (!r.ok) throw new Error(`Erro ${r.status}`);

      const data = await r.json();
      setAnswer(data.answer ?? JSON.stringify(data, null, 2));
    } catch (e: any) {
      setError(e.message || "Erro ao consultar o Agent.");
    } finally {
      setPending(false);
    }
  }

  return (
    <main className="max-w-3xl mx-auto p-6 space-y-4">
      <h1 className="text-3xl font-bold">TeleMed AI Console</h1>

      <section className="p-4 rounded border bg-gray-50">
        <div className="flex items-center gap-2 text-sm">
          <span className="font-semibold">Status do Agent:</span>
          {error ? (
            <span className="text-red-600">{error}</span>
          ) : status ? (
            <span className="text-green-700">online</span>
          ) : (
            <span>verificando…</span>
          )}
        </div>
        <div className="mt-2 text-xs text-gray-500">
          Dicas: esteja logado como <strong>médico</strong>, com <strong>consentimento</strong> dado e <code>AI_ENABLED=true</code>.
        </div>
      </section>

      <section className="space-y-2">
        <label className="block text-sm font-medium">Pergunta (sem PII)</label>
        <textarea
          className="w-full h-36 p-3 border rounded"
          placeholder="Ex.: Explique opções de autenticação segura no TeleMed."
          value={question}
          onChange={(e) => setQuestion(e.target.value)}
        />
        <button
          onClick={ask}
          disabled={pending || !question.trim()}
          className="px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-60"
        >
          {pending ? "Perguntando…" : "Perguntar ao Agent"}
        </button>
      </section>

      {(answer || error) && (
        <section className="p-4 rounded border bg-white">
          {error ? (
            <div className="text-red-700">{error}</div>
          ) : (
            <pre className="whitespace-pre-wrap text-sm">{answer}</pre>
          )}
        </section>
      )}
    </main>
  );
}


Esse componente chama /api/ai-agent/status ao carregar e usa /api/ai-agent/ask quando você clica no botão.

2) (Se ainda não fez) Garanta a rota no App

No client/src/App.tsx (ou onde define rotas do wouter), adicione:

import AIConsolePage from "./pages/ai-console";
import { Route } from "wouter";

// …
<Route path="/ai-console" component={AIConsolePage} />


Salve e recarregue.